{"version":3,"sources":["sections/login/useToken.ts","sections/login/LoginButton.tsx","components/layout/Stack.tsx","components/layout/Spacer.tsx","components/Text.tsx","components/form/Label.tsx","components/form/TextInput.tsx","components/form/TextArea.tsx","components/form/SubmitButton.tsx","sections/create/AddLinkForm.tsx","features/auth/useGithub.ts","features/selectors.ts","sections/links/linksSlice.ts","components/Card.tsx","components/Frame.tsx","features/embed/Imgur.tsx","features/embed/Twitter.tsx","components/Media.tsx","lib/getFileExtension.ts","components/LinkCard.tsx","sections/links/LinksSection.tsx","App.tsx","rootReducer.ts","store.ts","reportWebVitals.ts","index.tsx"],"names":["localStorageKey","useToken","console","log","storedToken","localStorage","getItem","token","URLSearchParams","window","location","search","get","setItem","history","pushState","document","title","pathname","config","authApi","authPath","origin","href","LoginButton","style","textDecoration","color","Stack","children","gap","display","flexDirection","rowGap","Spacer","height","Text","Label","htmlFor","TextInput","value","name","onChange","disabled","type","border","target","TextArea","SubmitButton","label","onClick","state","e","preventDefault","getLabel","appearance","backgroundColor","headFilename","AddLinkForm","loggedIn","useState","setTitle","submissionState","setSubmissionState","url","setUrl","github","axios","create","baseURL","headers","Authorization","useGithub","a","currentHeadResponse","data","currentHeadSha","sha","currentHeadContent","content","originalHead","id","JSON","parse","atob","head","newLink","crypto","randomUUID","time","Date","toISOString","next","prev","put","message","btoa","stringify","newLinkPostResponse","prevData","updatedPrevResponse","headData","updatedHeadResponse","setTimeout","padding","getHead","links","getLinks","linksPath","linksSlice","createSlice","initialState","reducers","headLoaded","action","payload","linkLoaded","fetch","response","json","getLink","fetchLink","dispatch","link","actions","error","Card","borderRadius","Frame","justifyContent","alignItems","background","Imgur","file","split","controls","src","imgurEmbed","createIframe","className","lang","Twitter","indexOfLastSlash","lastIndexOf","slice","length","parseInt","tweetId","sourceType","options","noHeader","noFooter","Media","extStart","indexOf","ext","substr","extEnd","substring","getFileExtension","alt","maxHeight","maxWidth","objectFit","includes","LinkCard","Links","useDispatch","useSelector","useEffect","getState","getHeadSelector","width","map","overflow","textOverflow","App","rootReducer","combineReducers","reducer","store","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1960a8fa.chunk.js","sourcesContent":["const localStorageKey = 'auth_token'\n\nexport function useToken() {\n  console.log('usetoken called')\n  // see if we've already got a token\n  const storedToken = localStorage.getItem(localStorageKey)\n  if (storedToken) {\n    return storedToken\n  }\n\n  // otherwise, see if it's part of the current url\n  const searchParams = new URLSearchParams(window.location.search)\n  const token = searchParams.get('token')\n  if (token !== null) {\n    localStorage.setItem(localStorageKey, token)\n    window.history.pushState({}, document.title, window.location.pathname)\n  }\n\n  return token\n}\n","import React from 'react'\n\nconst config = {\n  authApi: 'https://whoamong.us',\n  authPath: '/.netlify/functions/auth',\n  origin: window.location.href,\n}\n\nexport const LoginButton = () => (\n  <a\n    href={`${config.authApi}${config.authPath}?origin=${config.origin}`}\n    style={{ textDecoration: 'none', color: 'var(--text-color)' }}\n  >\n    Login\n  </a>\n)\n","import { whitespace } from './whitespace'\n\ntype Props = {\n  children: React.ReactNode\n  gap: whitespace\n}\n\nexport function Stack({ children, gap }: Props) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: `${gap}px`,\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n","import { whitespace } from './whitespace'\n\ntype Props = {\n  height: whitespace\n}\n\nexport function Spacer({ height }: Props) {\n  return <div style={{ height: `${height}px` }} />\n}\n","type Props = {\n  children: React.ReactNode\n}\nexport function Text({ children }: Props) {\n  return <span style={{ color: 'var(--text-color)' }}>{children}</span>\n}\n","import { Text } from '../Text'\n\ntype Props = {\n  children: React.ReactNode\n  htmlFor: string\n}\nexport function Label({ children, htmlFor }: Props) {\n  return (\n    <label htmlFor={htmlFor}>\n      <Text>{children}</Text>\n    </label>\n  )\n}\n","import { Label } from './Label'\n\ntype Props = {\n  value: string\n  name: string\n  onChange: (value: string) => void\n  disabled: boolean\n}\n\nexport function TextInput({ value, name, onChange, disabled }: Props) {\n  return (\n    <>\n      <Label htmlFor={name}>{name}</Label>\n      <input\n        type=\"text\"\n        name={name}\n        value={value}\n        style={{ border: 'var(--border)' }}\n        onChange={({ target: { value } }) => onChange(value)}\n        disabled={disabled}\n      />\n    </>\n  )\n}\n","import { Label } from './Label'\n\ntype Props = {\n  value: string\n  name: string\n  onChange: (value: string) => void\n  disabled: boolean\n}\n\nexport function TextArea({ value, name, onChange, disabled }: Props) {\n  return (\n    <>\n      <Label htmlFor={name}>{name}</Label>\n      <textarea\n        name={name}\n        value={value}\n        style={{ border: 'var(--border)' }}\n        onChange={({ target: { value } }) => onChange(value)}\n        disabled={disabled}\n      />\n    </>\n  )\n}\n","import { SubmissionState } from 'sections/create/AddLinkForm'\n\ntype Props = {\n  label?: string\n  onClick: () => void\n  state: SubmissionState\n}\n\nexport function SubmitButton({ label = 'submit', onClick, state }: Props) {\n  return (\n    <input\n      type=\"submit\"\n      disabled={state === 'attempt'}\n      onClick={(e) => {\n        e.preventDefault()\n        onClick()\n      }}\n      value={getLabel(state)}\n      style={{\n        appearance: 'none',\n        border: 'var(--border)',\n        color: 'var(--text-color)',\n        backgroundColor: 'var(--white)',\n      }}\n    />\n  )\n}\n\nfunction getLabel(state: SubmissionState) {\n  switch (state) {\n    case 'initial':\n      return 'Submit'\n    case 'attempt':\n      return 'Shoots!'\n    case 'success':\n      return 'Score!'\n    case 'fail':\n      return 'Air ball'\n  }\n}\n","import { useState } from 'react'\nimport { useGithub } from 'features/auth/useGithub'\nimport { LoginButton } from 'sections/login/LoginButton'\nimport { Stack } from 'components/layout/Stack'\nimport { Spacer } from 'components/layout/Spacer'\nimport { TextInput } from 'components/form/TextInput'\nimport { TextArea } from 'components/form/TextArea'\nimport { SubmitButton } from 'components/form/SubmitButton'\n\nconst headFilename = 'head.json'\n\ntype Props = {\n  loggedIn: boolean\n}\n\nexport type SubmissionState = 'initial' | 'attempt' | 'success' | 'fail'\n\nexport function AddLinkForm({ loggedIn }: Props) {\n  const [title, setTitle] = useState('')\n  const [submissionState, setSubmissionState] =\n    useState<SubmissionState>('initial')\n  const [url, setUrl] = useState('')\n  const github = useGithub()\n\n  async function handleSubmit() {\n    const currentHeadResponse = await github.get(headFilename)\n    setSubmissionState('attempt')\n    const { sha: currentHeadSha, content: currentHeadContent } =\n      currentHeadResponse.data\n\n    const originalHead = {\n      sha: currentHeadSha,\n      id: JSON.parse(atob(currentHeadContent)).head,\n    }\n    console.log('head before writing new link', originalHead)\n    // post new one,\n    // grab next value from current head\n    // generate guid\n    // assemble data\n    const newLink = {\n      // TODO: remove ts-ignore when TS knows about the new API\n      // @ts-ignore: Bleeding edge UUID API, TS doesn't know about it yet\n      id: crypto.randomUUID(),\n      title,\n      href: url,\n      time: new Date().toISOString(),\n      next: null,\n      prev: originalHead.id,\n    }\n    console.log('newLink', newLink)\n    const newLinkPostResponse = await github.put(`${newLink.id}.json`, {\n      message: `Create new link: ${newLink.title}\\n\\n${newLink.href}`,\n      content: btoa(JSON.stringify(newLink)),\n    })\n    console.log('response', newLinkPostResponse)\n\n    // update previous head, so ~`previousHead.next` points to the link we just created\n    const { data: prevData } = await github.get(`${originalHead.id}.json`)\n    console.log('prevResponse', prevData)\n    const prev = {\n      id: prevData.id,\n      content: JSON.parse(atob(prevData.content)),\n      sha: prevData.sha,\n    }\n    console.log('prev', prev)\n    prev.content.next = newLink.id\n    const updatedPrevResponse = await github.put(`${originalHead.id}.json`, {\n      message: `Update prev for link: ${newLink.title}\\n\\n${newLink.href}`,\n      content: btoa(JSON.stringify(prev.content)),\n      sha: prev.sha,\n    })\n    console.log('updatedPrevResponse', updatedPrevResponse)\n\n    // update head pointer\n    const { data: headData } = await github.get('head.json')\n    const head = {\n      content: JSON.parse(atob(headData.content)),\n      sha: headData.sha,\n    }\n    head.content.head = newLink.id\n    console.log('head content', head.content)\n    try {\n      const updatedHeadResponse = await github.put('head.json', {\n        message: `Update head for link: ${newLink.title}\\n\\n${newLink.href}`,\n        content: btoa(JSON.stringify(head.content)),\n        sha: head.sha,\n      })\n      console.log('updatedHeadResponse', updatedHeadResponse)\n\n      setSubmissionState('success')\n      setTitle('')\n      setUrl('')\n      setTimeout(() => setSubmissionState('initial'))\n    } catch {\n      setSubmissionState('fail')\n    }\n  }\n\n  return (\n    <div style={{ padding: '16px 0' }}>\n      {loggedIn ? (\n        <form>\n          <Stack gap={4}>\n            <TextInput\n              name=\"title\"\n              value={title}\n              onChange={(value) => setTitle(value)}\n              disabled={submissionState === 'attempt'}\n            />\n            <Spacer height={4} />\n            <TextArea\n              name=\"content\"\n              value={url}\n              onChange={(value) => setUrl(value)}\n              disabled={submissionState === 'attempt'}\n            />\n            <Spacer height={8} />\n            <SubmitButton state={submissionState} onClick={handleSubmit} />\n          </Stack>\n        </form>\n      ) : (\n        <LoginButton />\n      )}\n    </div>\n  )\n}\n","import axios from 'axios'\nimport { useToken } from 'sections/login/useToken'\n\nexport function useGithub() {\n  const token = useToken()\n  const instance = axios.create({\n    baseURL:\n      'https://api.github.com/repos/iryan2/backboard-page/contents/links/',\n    headers: { Authorization: `Bearer ${token}` },\n  })\n\n  return instance\n}\n","import { RootState } from '../store'\n\nexport const getHead = (state: RootState) => state.links.head\nexport const getLinks = (state: RootState) => state.links.links\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getHead as getHeadSelector } from 'features/selectors'\nimport rootReducer from 'rootReducer'\nimport { AppThunk } from 'store'\n\nconst host = 'https://iryan2.backboard.page'\nconst linksPath = `${host}/links`\n\nexport type Link = {\n  id: string\n  title: string\n  href: string\n  timestamp: string\n  next: string | null\n  prev: string | null\n}\n\ntype Head = string\n\nexport type RootState = ReturnType<typeof rootReducer>\ntype State = {\n  head: Head\n  links: Link[]\n}\nexport type GetState = () => RootState\n\nconst linksSlice = createSlice({\n  name: 'links',\n  initialState: { head: '', links: [] as Link[] },\n  reducers: {\n    headLoaded: (state: State, action: PayloadAction<Head>) => ({\n      ...state,\n      head: action.payload,\n    }),\n    linkLoaded: (state: State, action: PayloadAction<Link>) => ({\n      ...state,\n      links: [...state.links, action.payload],\n    }),\n  },\n})\n\nexport default linksSlice\n\nasync function getHead() {\n  const response = await fetch(`${linksPath}/head.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const fetchHead = (): AppThunk => async (dispatch: any) => {\n  try {\n    const head = await getHead()\n    dispatch(linksSlice.actions.headLoaded(head.head))\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nasync function getLink(head: Head) {\n  const response = await fetch(`${linksPath}/${head}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const fetchLink =\n  (head: Head): AppThunk =>\n  async (dispatch: any) => {\n    try {\n      const link = await getLink(head)\n      dispatch(linksSlice.actions.linkLoaded(link))\n      if (link.prev) {\n        dispatch(fetchLink(link.prev))\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\nexport const fetchLinks =\n  (): AppThunk => async (dispatch: any, getState: any) => {\n    try {\n      await dispatch(fetchHead())\n      const head = getHeadSelector(getState())\n\n      if (head) {\n        await dispatch(fetchLink(head))\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n","type Props = {\n  children: React.ReactNode\n}\nexport function Card({ children }: Props) {\n  return (\n    <div\n      style={{\n        borderRadius: '4px',\n        border: '1px solid var(--light-grey)',\n        padding: '16px',\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n","type Props = {\n  children: React.ReactNode\n}\n\nexport function Frame({ children }: Props) {\n  return (\n    <div\n      style={{\n        height: '400px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'var(--black)',\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n","import { Frame } from 'components/Frame'\n\ntype Props = {\n  href: string\n}\n\nexport function Imgur({ href }: Props) {\n  // href might have extension or not: https://i.imgur.com/A61SaA1.gifv or https://i.imgur.com/A61SaA1\n  // if not, do embed.\n  // If so, determine whether it's an image or video\n\n  let file = href.split('https://i.imgur.com/')[1]\n  if (!file) {\n    file = href.split('https://imgur.com/')[1]\n  }\n\n  const [name, extension] = file.split('.')\n\n  switch (extension) {\n    case 'gifv':\n      return (\n        <Frame>\n          <video style={{ height: '100%' }} controls>\n            <source src={`https://i.imgur.com/${name}.mp4`} type=\"video/mp4\" />\n            <source\n              src={`https://i.imgur.com/${name}.webm`}\n              type=\"video/webm\"\n            />\n          </video>\n        </Frame>\n      )\n    default:\n      // this setTimeout hack causes createIframe to be called after the blockquote mounts\n      // @ts-ignore\n      setTimeout(window.imgurEmbed?.createIframe(), 1000)\n      return (\n        <Frame>\n          <blockquote\n            className=\"imgur-embed-pub\"\n            lang=\"en\"\n            data-id={name}\n          ></blockquote>\n        </Frame>\n      )\n  }\n}\n","import { Frame } from 'components/Frame'\nimport { TwitterTweetEmbed, TwitterTimelineEmbed } from 'react-twitter-embed'\n\ntype Props = {\n  href: string\n}\n\nexport function Twitter({ href }: Props) {\n  const indexOfLastSlash = href.lastIndexOf('/')\n  const targetAndQueryParams = href.slice(indexOfLastSlash + 1, href.length)\n  const target = targetAndQueryParams.split('?')[0].split('#')[0]\n\n  if (parseInt(target)) {\n    // here we know target is an id, so we assume it's a tweet\n    return (\n      <Frame>\n        <TwitterTweetEmbed tweetId={target} />\n      </Frame>\n    )\n  }\n\n  // otherwise we assume it's a profile link\n  return (\n    <Frame>\n      <TwitterTimelineEmbed\n        sourceType=\"url\"\n        url={href}\n        options={{ height: 400 }}\n        noHeader\n        noFooter\n      />\n    </Frame>\n  )\n}\n","import { Imgur } from '../features/embed/Imgur'\nimport { Twitter } from '../features/embed/Twitter'\nimport { getFileExtension } from '../lib/getFileExtension'\nimport { Frame } from './Frame'\n\ntype Props = {\n  href: string\n}\n\nexport function Media({ href }: Props) {\n  const extension = getFileExtension(href)\n\n  switch (extension) {\n    case 'jpg':\n    case 'jpeg':\n    case 'png':\n    case 'gif':\n      return (\n        <Frame>\n          <a href={href}>\n            <img\n              src={href}\n              alt=\"interesting content\"\n              style={{\n                maxHeight: '100%',\n                maxWidth: '100%',\n                objectFit: 'contain',\n              }}\n            />\n          </a>\n        </Frame>\n      )\n  }\n\n  if (href.includes('twitter.com')) {\n    return <Twitter href={href} />\n  }\n\n  if (href.includes('imgur.com')) {\n    return <Imgur href={href} />\n  }\n\n  return null\n}\n","export function getFileExtension(url: string) {\n  // Extension starts after the first dot after the last slash\n  var extStart = url.indexOf('.', url.lastIndexOf('/') + 1)\n  if (extStart === -1) return false\n  var ext = url.substr(extStart + 1),\n    // end of extension must be one of: end-of-string or question-mark or hash-mark\n    extEnd = ext.search(/$|[?#]/)\n  return ext.substring(0, extEnd)\n}\n","import { Card } from './Card'\nimport { Media } from './Media'\n\ntype Props = {\n  href: string\n  children: React.ReactNode\n}\nexport function LinkCard({ children, href }: Props) {\n  return (\n    <div style={{ color: 'var(--text-color)' }}>\n      <Card>\n        {children}\n        <Media href={href} />\n      </Card>\n    </div>\n  )\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { fetchLinks, Link } from 'sections/links/linksSlice'\nimport { getHead, getLinks } from 'features/selectors'\nimport { useEffect } from 'react'\nimport { Stack } from 'components/layout/Stack'\nimport { LinkCard } from 'components/LinkCard'\n\nexport function Links() {\n  const dispatch = useDispatch()\n  const head = useSelector(getHead)\n  const links = useSelector(getLinks)\n\n  useEffect(() => {\n    // only fetch links once\n    if (!head) {\n      dispatch(fetchLinks())\n    }\n  }, [dispatch, head])\n\n  return (\n    <section style={{ width: '100%', maxWidth: '450px' }}>\n      <Stack gap={8}>\n        {links.map((link: Link) => (\n          <LinkCard key={link.id} href={link.href}>\n            <a\n              href={link.href}\n              style={{ textDecoration: 'none', color: 'var(--text-color)' }}\n            >\n              {link.title}\n            </a>\n            <br />\n            <pre style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\n              {link.href}\n            </pre>\n          </LinkCard>\n        ))}\n      </Stack>\n    </section>\n  )\n}\n","import { useToken } from 'sections/login/useToken'\nimport { AddLinkForm } from 'sections/create/AddLinkForm'\nimport './App.css'\nimport { Links } from 'sections/links/LinksSection'\n\nconst App: React.FC = () => {\n  const token = useToken()\n\n  const loggedIn = typeof token === 'string'\n  return (\n    <div className=\"App\">\n      <AddLinkForm loggedIn={loggedIn} />\n      <Links />\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers } from '@reduxjs/toolkit'\nimport links from './sections/links/linksSlice'\n\nconst rootReducer = combineReducers({\n  links: links.reducer,\n})\n\nexport default rootReducer\n","import { configureStore, Action } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}